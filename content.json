{"pages":[],"posts":[{"title":"react读书笔记（一）","text":"React生命周期 空心圆表示初次挂载的节点，实心圆表示渲染后的节点 组件在首次挂载的时候，会执行getDefaultProps，这个函数只会在首次挂载的时候执行一次，再次挂载组件的时候，不会再次执行。 如果在ES6的class语法规则下，getDefaultProps是指通过static defaultProps = {}表示的默认参数，而getInitialState是指在constructor中设置的this.state = {}的方式。 在无状态组件配合react hooks使用的时候，getDefaultProps是指const AComponent = ({xxx=defaultValue}) =&gt; ()中赋值的形式，getInitialState是指const [xxx, setXxx] = useState(defaultState)的方式。 setState在React的有状态组件中，React不允许用户在更新state的时候使用this.state.xxx赋值的形式，因为通过setState的状态不会马上更新，而是记录在一个需要更新的队列中，当再次调用setState时，会将state合并，从而忽略this.state赋值的操作，直接赋值并不会触发重新渲染。 1234567891011121314151617181920212223242526272829303132import React, { Component } from 'react';class Example extends Component{ constructor(props) { super(props); this.state = { num: 0 } } componentDidMount() { this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//0 this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//0 Promise.resolve().then(() =&gt; { this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//2 this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//3 }) setTimeout(() =&gt; { this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//4 this.setState({ num: this.state.num + 1 }); console.log(this.state.num);//5 }, 0); } render() { return (&lt;input&gt;&lt;/input&gt;); }}export default Example; 当react在渲染的过程中，同步执行的代码处于同一个事务当中，批量更新的标志为true。而异步执行的代码处于另一段事务中，批量更新的标志默认为false。 不能在shouldComponentUpdate或componentWillUpdate中调用setState，会引起循环调用，让内存爆炸。","link":"/2020/08/16/React%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/08/15/hello-world/"}],"tags":[{"name":"react","slug":"react","link":"/tags/react/"}],"categories":[]}